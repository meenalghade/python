   Python 3.6.6
   
   1. Install python . 
   2. Install text editor - atom.
   3. Saving file name with <filename>.py .
   4. Command for compiling and Running program in python
		In Mac - > python3 <filename>.py   enter ==|
		In Windows - > python <filename>.py
   5. Variables in python are of 4 types 
			a. Integer -- these are variables with whole number.
			b. Float -- these are variables with decimal point number.
			c. String - anything written in double quote ("") or ('') single quote are considered as String.
			d. Boolean -- having values True(uppercase T value as 1) and False(uppercase F value as 0). Takes value in binary.
	6. Comments in python
			# - is used to comment a line code
	7. Arithmetic
			+ - additon 
			* - multiplication
			- - subtraction
			/ - division
			% - modulus
			
		Shortform : a = a+ b or a+=b
					c = c*b or c*=b
	8. Concatenation
				a = "Hello"
				b = "World"
				c = a + " " + b   # this is concatenation of string with '+' sign
				d = a * 3   # this will print hello 3 times 
	9. Lists
			For list we use [] square bracket to add values 
			l = [100,200,300,400,500]      # - list work with index value  
			a = ['a','b'] 
			
			print(a[0])
			print(l[0])
			print(l[2])
						
			l.append(600)      # to add to the list we use append  (mutable)
			
			print(l[5])
			
	10. Tuples  -  are similar to lists but with some important difference 
			a.For tuples we add value we use parentheses ()
			t = (100,200,300) 					
			b. List can be edited but tuples can't. (immutable)
	
	11. Dictionaries - are different from lists and tuples, becoz they are key value pairs stored as string.
			d = {'word':'dictionary','word2':'dictionary2','word3':'dictionary3'}
			a = {'a':34,'b':56,'c':48}
			
			print(a['b'])						# 56
			print(d['word3'])					#dictionary3
	
	12. Conditionals 
			if condition:
				do something
			else:
				do something else
			
			Eg. a = 1
				b = 2
				
				if(a > b):
					print('Yes')
				else:
					print('No')
					
				Conditions can be a>= b , a<= b, a== b , a!=b
	13. Loops
			a.For Loop :
				for i in range(10000) # it will print from 0 to 9999
					print(i)
			
			b.While Loop
				i=0
				while i<7
				print(i)
				i += 1
				
	14. String methods 
			s = 'abcdef'
			
			print(s[0])       #a
			print(s[0:3])	  #abc
			print(s[0:4:2])	  #ac
			
			print(s.find('c'))     #2    this give the index value 
			print(s.replace('d','z'))   #abczef
			print(s.count('e')) 		#1    count the existence of letters,value
		
	15. Lists Methods
			a = [1,2,3]
			b = [4,5,6]
			
			c = a+ b        
			print(c)			# [1,2,3,4,5,6]
			
			s = 'a b c d e f'
			z = s.split()
			print(z)			#  ['a','b','c','d','e','f']
			
			if 'a' in z:           or     if 'a' not in z:
				print("A is in z")
			else:
				print"A is not in z")
			
			
			for i in z:
				print(i)     #a b c  d e f
				
			q = [8,2,6,9,1,3]
			q.sort()
			print(q)           #[1,2,3,6,8,9]
			q.reverse()
			print(q)			#[9,8,6,3,2,1]
			
			print(q.count(3))    #1
			print(q.index(9)     #0
			print(len(q))        #6
			print(min(q))		 #1
			print(max(q))		 #9
			
	16. Typecasting
			a= '237'
			b = int(a)
			c = str(b)
			
			x =  [b,c]
			print(x)         #[237,'237']
			
	17. Escape Sequences
			print(" " ") so instead of this use print(" \" ")    #"
			print(" \" /n ")  to print in next line
			\t  - to print after a tab space
			\'
			\a
			
	18. User Input
			x = input("Enter a number :")
			print(x*x)         # this will give error:TypeError :Can't multiply sequence by non-int of type 'str'
			
			So to solve this type cast the x value 
			x = int(input("Enter a number :"))
			print(x*x)     			#16 if number entered is 4 
			
	19. Creating Functions 
			def addTwoNumber(x,y):       # defining and declaring function 
				return x + y
			
			s = addTwoNumbers(3,4)     # calling function 
			
	20. Installing Modules
			Modules are software packages we bring down to into our project in order to use code which has already been created.
			http://pypi.org   - Python package index (PyPI) is a repository of software for the python programming language
			Command for Installing modules 
			Mac - sudo plp3 install <package name>   ex: sudo plp3 install astropy
			Windows  - plp install <package name>    ex: plp install astropy
			
			After installing the modules you can use in our .py file by using the word 'import'.
			Python has some build in module as math
			
			pip - is the package manager for python
			
	21. PEP8 Conventions -  is coding style convention for python.
			Variables,method , function in python has following format : this_is_a_variable(underscore with all small character)
			
	22. Making a GitHub repository 
			Step by step commands for adding code to github repository
				git init 
				git add .
			
			
			
			
	
			
	